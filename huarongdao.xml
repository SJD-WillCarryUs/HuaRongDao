<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

int position[20] = {1,0,0,2,
                    1,0,0,2,
                    3,4,4,5,
                    3,6,7,5,
                    8,10,10,9};


</declaration>
	<template>
		<name x="5" y="5">a</name>
		<declaration>// Place local declarations here.

void move(int N,int i){
    int x = 0;
    int p=0;
    int t[1] = {1};
    while(position[p]!=N){
        p++;
        if(p==20){
            t[N];
}
    }
    x=p;

    if(i == 1){  //move left
        if(x%4==0){
            return;
        }

        if(N==1||N==2||N==3||N==5){    //the block is 2*1
            if(position[x-1]==10&amp;&amp;position[x+3]==10){
                position[x-1]=N;
                position[x+3]=N;
                position[x]=10;
                position[x+4]=10;
            }
        }
        else if (N==6||N==7||N==8||N==9)  // the block is 1*1
        {
            if(position[x-1]==10){
                position[x-1]=N;
                position[x]=10;
            }
        }
        else if (N==0)  // the block is 2*2
        {
            if(position[x-1]==10&amp;&amp;position[x+3]==10){
                position[x-1]=N;
                position[x+3]=N;
                position[x+1]=10;
                position[x+5]=10;
            }
        }
        else if (N==4)   // the block is 1*2
        {
            if(position[x-1]==10){
                position[x-1]=N;
                position[x+1]=10;
            }
        }   
    }
    
    else if (i==2) //move right
    {
        if(x%4==3){
            return;
        }
        if(N==1||N==2||N==3||N==5){    // the block is 2*1
            if(position[x+1]==10&amp;&amp;position[x+5]==10){
                position[x+1]=N;
                position[x+5]=N;
                position[x]=10;
                position[x+4]=10;
            }
        }
        else if (N==6||N==7||N==8||N==9)  // the block is 1*1
        {
            if(position[x+1]==10){
                position[x+1]=N;
                position[x]=10;
            }
        }
        else if (N==0)  // the block is 2*2
        {
            if((x+1)%3!=0){
                if(position[x+2]==10&amp;&amp;position[x+6]==10){
                    position[x+2]=N;
                    position[x+6]=N;
                    position[x]=10;
                    position[x+4]=10;
                }
            }
            
        }
        else if (N==4)  //  the block is 1*2
        {
            if((x+1)%3!=0){
                if(position[x+2]==10){
                    position[x+2]=N;
                    position[x]=10;
                }
            }
        }
    }

else if (i==3) //move up
    {
        if(x&lt;=3){
            return;
        }
        if(N==1||N==2||N==3||N==5){    // the block is 2*1
            if(position[x-4]==10){
                position[x-4]=N;
                position[x+4]=10;
            }
        }
        else if (N==6||N==7||N==8||N==9)  // the block is 1*1
        {
            if(position[x-4]==10){
                position[x-4]=N;
                position[x]=10;
            }
        }
        else if (N==0)  // the block is 2*2
        {
            if(position[x-4]==10&amp;&amp;position[x-3]==10){
                position[x-4]=N;
                position[x-3]=N;
                position[x+4]=10;
                position[x+5]=10;
            }
        }
        else if (N==4)  //  the block is 1*2
        {
            if(position[x-4]==10&amp;&amp;position[x-3]==10){
                position[x-4]=N;
                position[x-3]=N;
                position[x]=10;
                position[x+1]=10;
            }
        }
    }
    
else if (i==4) //move down
    {
        if(x&gt;=16){
            return;
        }
        if(N==1||N==2||N==3||N==5){    // the block is 2*1
            if(x&lt;12){
               if(position[x+8]==10){
                position[x+8]=N;
                position[x+4]=N;
                position[x]=10;
                }
            }
            
        }
        else if (N==6||N==7||N==8||N==9)  // the block is 1*1
        {
            if(position[x+4]==10){
                position[x+4]=N;
                position[x]=10;
            }
        }
        else if (N==0)  // the block is 2*2
        {
            if(x&lt;12){
                if(position[x+8]==10&amp;&amp;position[x+9]==10){
                    position[x+8]=N;
                    position[x+9]=N;
                    position[x]=10;
                    position[x+1]=10;
                }
            }
}    

        else if (N==4)  //  the block is 1*2
        {
            if(position[x+4]==10&amp;&amp;position[x+5]==10){
                position[x+4]=N;
                position[x+5]=N;
                position[x]=10;
                position[x+1]=10;
            }
        }
    }
}

int judge(){
    if(position[17]==0&amp;&amp;position[18]==0){
        return 1;
    }
    else{
        return 0;
    }
}
</declaration>
		<location id="id0" x="-59" y="59">
			<name x="-34" y="42">no_finish_state</name>
		</location>
		<location id="id1" x="-59" y="374">
			<name x="-25" y="357">finish_state</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="123">judge()==0</label>
			<label kind="assignment" x="-41" y="157">move(9,1)</label>
			<nail x="204" y="255"/>
			<nail x="34" y="306"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="118">judge()==0</label>
			<label kind="assignment" x="-41" y="152">move(9,2)</label>
			<nail x="178" y="246"/>
			<nail x="42" y="289"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="114">judge()==0</label>
			<label kind="assignment" x="-41" y="148">move(9,3)</label>
			<nail x="161" y="238"/>
			<nail x="42" y="272"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="106">judge()==0</label>
			<label kind="assignment" x="-41" y="140">move(9,4)</label>
			<nail x="136" y="221"/>
			<nail x="51" y="255"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="97">judge()==0</label>
			<label kind="assignment" x="-41" y="131">move(8,1)</label>
			<nail x="110" y="204"/>
			<nail x="59" y="229"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="89">judge()==0</label>
			<label kind="assignment" x="-41" y="123">move(8,2)</label>
			<nail x="93" y="187"/>
			<nail x="51" y="204"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-16" y="89">judge()==0</label>
			<label kind="assignment" x="-16" y="123">move(8,3)</label>
			<nail x="-34" y="76"/>
			<nail x="68" y="170"/>
			<nail x="42" y="187"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="67">judge()==0</label>
			<label kind="assignment" x="-41" y="101">move(8,4)</label>
			<nail x="42" y="144"/>
			<nail x="25" y="161"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="-59">judge()==0</label>
			<label kind="assignment" x="-41" y="-25">move(7,1)</label>
			<nail x="195" y="-110"/>
			<nail x="195" y="204"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="-51">judge()==0</label>
			<label kind="assignment" x="-41" y="-17">move(7,2)</label>
			<nail x="178" y="-93"/>
			<nail x="178" y="187"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="-34">judge()==0</label>
			<label kind="assignment" x="-41" y="0">move(7,3)</label>
			<nail x="136" y="-59"/>
			<nail x="136" y="161"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="-22">judge()==0</label>
			<label kind="assignment" x="-41" y="12">move(7,4)</label>
			<nail x="102" y="-34"/>
			<nail x="102" y="136"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="-13">judge()==0</label>
			<label kind="assignment" x="-41" y="21">move(6,1)</label>
			<nail x="85" y="-17"/>
			<nail x="85" y="110"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="-5">judge()==0</label>
			<label kind="assignment" x="-41" y="29">move(6,2)</label>
			<nail x="59" y="0"/>
			<nail x="59" y="93"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="8">judge()==0</label>
			<label kind="assignment" x="-41" y="42">move(6,3)</label>
			<nail x="25" y="25"/>
			<nail x="25" y="76"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="12">judge()==0</label>
			<label kind="assignment" x="-41" y="46">move(6,4)</label>
			<nail x="17" y="34"/>
			<nail x="17" y="59"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-271" y="182">judge()==0</label>
			<label kind="assignment" x="-271" y="216">move(5,1)</label>
			<nail x="-85" y="306"/>
			<nail x="-289" y="127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-245" y="169">judge()==0</label>
			<label kind="assignment" x="-245" y="203">move(5,2)</label>
			<nail x="-85" y="280"/>
			<nail x="-263" y="127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-220" y="157">judge()==0</label>
			<label kind="assignment" x="-220" y="191">move(5,3)</label>
			<nail x="-85" y="255"/>
			<nail x="-238" y="127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-194" y="144">judge()==0</label>
			<label kind="assignment" x="-194" y="178">move(5,4)</label>
			<nail x="-85" y="229"/>
			<nail x="-212" y="127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-169" y="131">judge()==0</label>
			<label kind="assignment" x="-169" y="165">move(4,1)</label>
			<nail x="-85" y="204"/>
			<nail x="-187" y="127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-126" y="59">judge()==0</label>
			<label kind="assignment" x="-126" y="93">move(4,2)</label>
			<nail x="-85" y="170"/>
			<nail x="-144" y="127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-72" y="67">judge()==0</label>
			<label kind="assignment" x="-72" y="101">move(4,3)</label>
			<nail x="-85" y="144"/>
			<nail x="-119" y="119"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-67" y="50">judge()==0</label>
			<label kind="assignment" x="-67" y="84">move(4,4)</label>
			<nail x="-76" y="110"/>
			<nail x="-93" y="102"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-424" y="-22">judge()==0</label>
			<label kind="assignment" x="-424" y="12">move(3,1)</label>
			<nail x="-442" y="-34"/>
			<nail x="-187" y="-263"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-373" y="-17">judge()==0</label>
			<label kind="assignment" x="-373" y="17">move(3,2)</label>
			<nail x="-391" y="-25"/>
			<nail x="-187" y="-221"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-330" y="-13">judge()==0</label>
			<label kind="assignment" x="-330" y="21">move(3,3)</label>
			<nail x="-348" y="-17"/>
			<nail x="-187" y="-170"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-288" y="-9">judge()==0</label>
			<label kind="assignment" x="-288" y="25">move(3,4)</label>
			<nail x="-306" y="-8"/>
			<nail x="-178" y="-127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-245" y="-5">judge()==0</label>
			<label kind="assignment" x="-245" y="29">move(2,1)</label>
			<nail x="-263" y="0"/>
			<nail x="-161" y="-93"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-211" y="-1">judge()==0</label>
			<label kind="assignment" x="-211" y="33">move(2,2)</label>
			<nail x="-229" y="8"/>
			<nail x="-161" y="-59"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-177" y="4">judge()==0</label>
			<label kind="assignment" x="-177" y="38">move(2,3)</label>
			<nail x="-195" y="17"/>
			<nail x="-153" y="-34"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-152" y="4">judge()==0</label>
			<label kind="assignment" x="-152" y="38">move(2,4)</label>
			<nail x="-170" y="17"/>
			<nail x="-153" y="-8"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-50" y="-335">judge()==0</label>
			<label kind="assignment" x="-50" y="-301">move(1,1)</label>
			<nail x="-68" y="-382"/>
			<nail x="280" y="-221"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-41" y="-314">judge()==0</label>
			<label kind="assignment" x="-41" y="-280">move(1,2)</label>
			<nail x="-59" y="-348"/>
			<nail x="238" y="-212"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-33" y="-276">judge()==0</label>
			<label kind="assignment" x="-33" y="-242">move(1,3)</label>
			<nail x="-51" y="-297"/>
			<nail x="187" y="-187"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="8" y="-238">judge()==0</label>
			<label kind="assignment" x="8" y="-221">move(1,4)</label>
			<nail x="-42" y="-247"/>
			<nail x="136" y="-162"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-24" y="-204">judge()==0</label>
			<label kind="assignment" x="-24" y="-170">move(0,1)</label>
			<nail x="-42" y="-204"/>
			<nail x="93" y="-136"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-25" y="-145">judge()==0</label>
			<label kind="assignment" x="-24" y="-123">move(0,2)</label>
			<nail x="-42" y="-145"/>
			<nail x="59" y="-102"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-25" y="-94">judge()==0</label>
			<label kind="assignment" x="-24" y="-77">move(0,3)</label>
			<nail x="-42" y="-94"/>
			<nail x="34" y="-60"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-25" y="-68">judge()==0</label>
			<label kind="assignment" x="-25" y="-51">move(0,4)</label>
			<nail x="-42" y="-43"/>
			<nail x="0" y="-26"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-51" y="102">judge()==1</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = a();
// List one or more processes to be composed into a system.
system Process;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Process.finish_state</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
